apiVersion: v1
kind: Namespace
metadata:
  name: elk-stack
---
##################################################
# ELK ElasticSearch RBAC ServiceAccount
##################################################
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch-logging
  namespace: elk-stack
  labels:
    app: elasticsearch-logging
---
##################################################
# ELK ElasticSearch RBAC ClusterRole
##################################################
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: elasticsearch-logging
  labels:
    app: elasticsearch-logging
rules:
- apiGroups:
  - ""
  resources:
  - "services"
  - "namespaces"
  - "endpoints"
  verbs:
  - "get"
---
##################################################
# ELK ElasticSearch RBAC ClusterRoleBinding
##################################################
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: elk-stack
  name: elasticsearch-logging
  labels:
    app: elasticsearch-logging
subjects:
- kind: ServiceAccount
  name: elasticsearch-logging
  namespace: elk-stack
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: elasticsearch-logging
  apiGroup: ""
---
##################################################
# ELK ElasticSearch Service
##################################################
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch
  namespace: elk-stack
  labels:
    app: elasticsearch-logging
spec:
  selector:
    app: elasticsearch-logging
  type: NodePort
  ports:
    - port: 9200
      targetPort: 9200
      nodePort: 32520
      name: rest
      protocol: TCP
    - port: 9300
      name: inter-node
---
##################################################
# ELK ElasticSearch Service
##################################################
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: es-cluster
  namespace: elk-stack
spec:
  serviceName: elasticsearch
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: elasticsearch-logging
  template:
    metadata:
      labels:
        app: elasticsearch-logging
    spec:
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.14.2
        resources:
          limits:
            cpu: 1000m
            memory: "2Gi"
          requests:
            cpu: 100m
            memory: "1Gi"
        ports:
        - containerPort: 9200
          name: rest
          protocol: TCP
        - containerPort: 9300
          name: inter-node
          protocol: TCP
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
        env:
          - name: cluster.name
            value: elasticsearch-k8s-logs
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: discovery.seed_hosts
            value: "es-cluster-0.elasticsearch"
          - name: cluster.initial_master_nodes
            value: "es-cluster-0"
          - name: ES_JAVA_OPTS
            value: "-Xms512m -Xmx512m"
      initContainers:
      - name: fix-permissions
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
      - name: increase-vm-max-map
        image: busybox
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      - name: increase-fd-ulimit
        image: busybox
        command: ["sh", "-c", "ulimit -n 65536"]
        securityContext:
          privileged: true
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: elasticsearch
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard
      resources:
        requests:
          storage: 10Gi
---
##################################################
# ELK Logstash ConfigMap
##################################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-configmap
  namespace: elk-stack
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
  logstash.conf: |
    input {
      beats {
        port => 5044
      }
    }
    filter {
      grok {
          match => { "message" => "%{COMBINEDAPACHELOG}" }
      }
      date {
        match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
      }
      geoip {
          source => "clientip"
        }
      }
      output {
        elasticsearch {
          hosts => ["elasticsearch:9200"]
      }
    }
---
##################################################
# ELK Logstash Service
##################################################
apiVersion: v1
kind: Service
metadata:
  name: logstash-svc
  namespace: elk-stack
spec:
  selector:
    app: logstash
  ports:
  - port: 5044
    targetPort: 5044
  type: ClusterIP
---
##################################################
# ELK Logstash Deployment
##################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash-dep
  namespace: elk-stack
spec:
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash:7.14.1
          resources:
            limits:
              memory: "2Gi"
              cpu: "1000m"
            requests:
              memory: "1Gi"
              cpu: "500m"
          ports:
            - containerPort: 5044
          volumeMounts:
          - name: config-volume
            mountPath: /usr/share/logstash/config
          - name: logstash-pipeline-volume
            mountPath: /usr/share/logstash/pipeline
      volumes:
      - name: config-volume
        configMap:
          name: logstash-configmap
          items:
            - key: logstash.yml
              path: logstash.yml
      - name: logstash-pipeline-volume
        configMap:
          name: logstash-configmap
          items:
            - key: logstash.conf
              path: logstash.conf
---
##################################################
# ELK FileBeat ServiceAccount
##################################################
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: elk-stack
  labels:
    app: filebeat
---
##################################################
# ELK FileBeat ClusterRole
##################################################
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat
  labels:
    app: filebeat
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list
---
##################################################
# ELK FileBeat ClusterRoleBinding
##################################################
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: elk-stack
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
---
##################################################
# ELK FileBeat ConfigMap
##################################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: elk-stack
  labels:
    app: filebeat
data:
  filebeat.yml: |-
    filebeat.config:
      prospectors:
        path: ${path.config}/prospectors.d/*.yml
        reload.enabled: false
      modules:
        path: ${path.config}/modules.d/*.yml
        reload.enabled: false
    output.logstash:
      hosts: ['logstash-svc:5044']
---
##################################################
# ELK FileBeat ConfigMap
##################################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-prospectors
  namespace: elk-stack
  labels:
    k8s-app: filebeat
data:
  kubernetes.yml: |-
    - type: docker
      containers.ids:
      - "*"
      processors:
        - add_kubernetes_metadata:
            in_cluster: true
---
##################################################
# ELK FileBeat Deamenset
##################################################
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: elk-stack
  labels:
    app: filebeat
spec:
  selector:
    matchLabels:
      app: filebeat
  template:
    metadata:
      labels:
        app: filebeat
    spec:
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      containers:
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:6.8.4 # 7.14.1 sorun var
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: prospectors
          mountPath: /usr/share/filebeat/prospectors.d
          readOnly: true
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: filebeat-config
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: prospectors
        configMap:
          defaultMode: 0600
          name: filebeat-prospectors
      - name: data
        hostPath:
          path: /mnt/k8s/elk/filebeat
---
##################################################
# ELK Kibana Service
##################################################
apiVersion: v1
kind: Service
metadata:
  name: kibana-svc
  namespace: elk-stack
  labels:
    app: kibana
    kubernetes.io/name: "Kibana"
spec:
  type: NodePort
  ports:
  - port: 5601
    protocol: TCP
    targetPort: ui
    nodePort: 32061
  selector:
    app: kibana
---
##################################################
# ELK Kibana Deployment
##################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana-dep
  namespace: elk-stack
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana-dep
        image: docker.elastic.co/kibana/kibana:7.14.2
        resources:
          requests:
            cpu: 100m
            memory: "512Mi"
          limits:
            cpu: 1000m
            memory: "2Gi"
        env:
          - name: ELASTICSEARCH_URL
            value: http://elasticsearch:9200
        ports:
        - containerPort: 5601
          name: ui
          protocol: TCP
---
##################################################
# ELK Kibana Ingress
##################################################
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: kibana-ingress
  namespace: elk-stack
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
    - hosts:
        - web.kibana.com
  rules:
    - host: web.kibana.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kibana-svc
                port:
                  number: 5601